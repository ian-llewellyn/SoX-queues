#!/bin/bash
#
# /etc/rc.d/init.d/soxqd
#
# This is the service control script for the SoX-queue Daemon.
#
# chkconfig: 345 90 10
# description: SoX-queue is a standalone script that uses inotify-tools \
#              to start a SoX instance when a new audio file is dropped \
#              into a queue directory. This service control script can be \
#              used to start one or many SoX-queue directory monitors.
CONFIG_DIR=/etc/SoX-queues
SOX_QUEUE_EXEC=/usr/local/bin/SoX-queue

# Source function library.
. /etc/init.d/functions

## Usage function
usage() {
	if [ ! -z $1 ]; then
		echo "Unrecognised command line parameter: $1" >&2
	fi
	echo "Usage: $0 <start|stop|status> [-c config_file]" >&2
	return 0
}

start() {
	echo -n "Starting SoX-queue: $(basename "$config_file")..."
	runuser soxq -c "$SOX_QUEUE_EXEC -c $config_file" &
	sleep 1
	ps -p $! &> /dev/null && success || failure
	echo
	return 0
}

stop() {
	echo -n "Stopping SoX-queue: $(basename "$config_file")..."
	pkill -f "$SOX_QUEUE_EXEC -c $config_file" && success || failure
	echo
	return 0
}

status() {
	echo -n "SoX-queue $(basename "$config_file"): "
	pid=$(pgrep -f "$SOX_QUEUE_EXEC -c $config_file")
	if [ -z "$pid" ]; then
		failure
	else
		echo -n $pid
		success
	fi
	echo
	return 0
}

# Just what is it that you want to do?
case $1 in
start)
	callback=start
	;;
stop)
	callback=stop
	;;
restart)
	callback=restart
	;;
status)
	callback=status
	;;
*)
	usage
	exit 1
esac
shift

## Command line args
while [ $# -ne 0 ]; do
	case $1 in
	-c)
		shift
		if [ -z "$1" ]; then
			usage
			exit 1
		fi
		config_files="$config_files $1"
		;;
	*)
		usage $1
		exit 1
		;;
	esac
	shift
done

# Generate our own list of config files if none was provided
if [ -z "$config_files" ]; then
	for config_file in $CONFIG_DIR/*.conf ; do
		config_files="$config_files $config_file"
	done
fi

if [ "$callback" == "start" ]; then
	for config_file in $config_files; do
		start
	done
elif [ "$callback" == "stop" ]; then
	for config_file in $config_files; do
		stop
	done
elif [ "$callback" == "restart" ]; then
	for config_file in $config_files; do
		stop
		start
	done
elif [ "$callback" == "status" ]; then
	for config_file in $config_files; do
		status
	done
fi
